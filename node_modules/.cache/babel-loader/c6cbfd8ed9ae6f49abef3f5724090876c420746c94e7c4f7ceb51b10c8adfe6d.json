{"ast":null,"code":"/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"parsePath\", {\n  enumerable: true,\n  get: function () {\n    return parsePath;\n  }\n});\nfunction parsePath(path) {\n  const hashIndex = path.indexOf(\"#\");\n  const queryIndex = path.indexOf(\"?\");\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : \"\",\n      hash: hashIndex > -1 ? path.slice(hashIndex) : \"\"\n    };\n  }\n  return {\n    pathname: path,\n    query: \"\",\n    hash: \"\"\n  };\n}","map":{"version":3,"mappings":"AAAA;;;;GAIC;;;;;+BACeA;;;WAAAA;;;AAAT,SAASA,UAAUC,IAAY;EACpC,MAAMC,YAAYD,KAAKE,OAAO,CAAC;EAC/B,MAAMC,aAAaH,KAAKE,OAAO,CAAC;EAChC,MAAME,WAAWD,aAAa,CAAC,MAAMF,YAAY,KAAKE,aAAaF,SAAQ;EAE3E,IAAIG,YAAYH,YAAY,CAAC,GAAG;IAC9B,OAAO;MACLI,UAAUL,KAAKM,SAAS,CAAC,GAAGF,WAAWD,aAAaF;MACpDM,OAAOH,WACHJ,KAAKM,SAAS,CAACH,YAAYF,YAAY,CAAC,IAAIA,YAAYO,aACxD;MACJC,MAAMR,YAAY,CAAC,IAAID,KAAKU,KAAK,CAACT,aAAa;IACjD;EACF;EAEA,OAAO;IAAEI,UAAUL;IAAMO,OAAO;IAAIE,MAAM;EAAG;AAC/C","names":["parsePath","path","hashIndex","indexOf","queryIndex","hasQuery","pathname","substring","query","undefined","hash","slice"],"sources":["../../../../../src/shared/lib/router/utils/parse-path.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}