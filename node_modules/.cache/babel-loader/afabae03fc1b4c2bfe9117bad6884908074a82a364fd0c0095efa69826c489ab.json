{"ast":null,"code":"// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  formatUrl: null,\n  urlObjectKeys: null,\n  formatWithValidation: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  formatUrl: function () {\n    return formatUrl;\n  },\n  urlObjectKeys: function () {\n    return urlObjectKeys;\n  },\n  formatWithValidation: function () {\n    return formatWithValidation;\n  }\n});\nconst _interop_require_wildcard = require(\"@swc/helpers/_/_interop_require_wildcard\");\nconst _querystring = /*#__PURE__*/_interop_require_wildcard._(require(\"./querystring\"));\nconst slashedProtocols = /https?|ftp|gopher|file/;\nfunction formatUrl(urlObj) {\n  let {\n    auth,\n    hostname\n  } = urlObj;\n  let protocol = urlObj.protocol || \"\";\n  let pathname = urlObj.pathname || \"\";\n  let hash = urlObj.hash || \"\";\n  let query = urlObj.query || \"\";\n  let host = false;\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, \":\") + \"@\" : \"\";\n  if (urlObj.host) {\n    host = auth + urlObj.host;\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(\":\") ? \"[\" + hostname + \"]\" : hostname);\n    if (urlObj.port) {\n      host += \":\" + urlObj.port;\n    }\n  }\n  if (query && typeof query === \"object\") {\n    query = String(_querystring.urlQueryToSearchParams(query));\n  }\n  let search = urlObj.search || query && \"?\" + query || \"\";\n  if (protocol && !protocol.endsWith(\":\")) protocol += \":\";\n  if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {\n    host = \"//\" + (host || \"\");\n    if (pathname && pathname[0] !== \"/\") pathname = \"/\" + pathname;\n  } else if (!host) {\n    host = \"\";\n  }\n  if (hash && hash[0] !== \"#\") hash = \"#\" + hash;\n  if (search && search[0] !== \"?\") search = \"?\" + search;\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent);\n  search = search.replace(\"#\", \"%23\");\n  return \"\" + protocol + host + pathname + search + hash;\n}\nconst urlObjectKeys = [\"auth\", \"hash\", \"host\", \"hostname\", \"href\", \"path\", \"pathname\", \"port\", \"protocol\", \"query\", \"search\", \"slashes\"];\nfunction formatWithValidation(url) {\n  if (process.env.NODE_ENV === \"development\") {\n    if (url !== null && typeof url === \"object\") {\n      Object.keys(url).forEach(key => {\n        if (!urlObjectKeys.includes(key)) {\n          console.warn(\"Unknown key passed via urlObject into url.format: \" + key);\n        }\n      });\n    }\n  }\n  return formatUrl(url);\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;EAQgBA,SAAS;WAATA;;EA8CHC,aAAa;WAAbA;;EAeGC,oBAAoB;WAApBA;;;;sEAjEa;AAE7B,MAAMC,mBAAmB;AAElB,SAASH,UAAUI,MAAiB;EACzC,IAAI;IAAEC,IAAI;IAAEC;EAAQ,CAAE,GAAGF;EACzB,IAAIG,WAAWH,OAAOG,QAAQ,IAAI;EAClC,IAAIC,WAAWJ,OAAOI,QAAQ,IAAI;EAClC,IAAIC,OAAOL,OAAOK,IAAI,IAAI;EAC1B,IAAIC,QAAQN,OAAOM,KAAK,IAAI;EAC5B,IAAIC,OAAuB;EAE3BN,OAAOA,OAAOO,mBAAmBP,MAAMQ,OAAO,CAAC,QAAQ,OAAO,MAAM;EAEpE,IAAIT,OAAOO,IAAI,EAAE;IACfA,OAAON,OAAOD,OAAOO,IAAI;EAC3B,OAAO,IAAIL,UAAU;IACnBK,OAAON,QAAQ,CAACC,SAASQ,OAAO,CAAC,OAAO,GAAC,GAAGR,WAAS,MAAKA,QAAO;IACjE,IAAIF,OAAOW,IAAI,EAAE;MACfJ,QAAQ,MAAMP,OAAOW,IAAI;IAC3B;EACF;EAEA,IAAIL,SAAS,OAAOA,UAAU,UAAU;IACtCA,QAAQM,OAAOC,aAAYC,sBAAsB,CAACR;EACpD;EAEA,IAAIS,SAASf,OAAOe,MAAM,IAAKT,SAAS,GAAC,GAAGA,SAAY;EAExD,IAAIH,YAAY,CAACA,SAASa,QAAQ,CAAC,MAAMb,YAAY;EAErD,IACEH,OAAOiB,OAAO,IACb,CAAC,CAACd,YAAYJ,iBAAiBmB,IAAI,CAACf,SAAQ,KAAMI,SAAS,OAC5D;IACAA,OAAO,QAAQA,QAAQ,EAAC;IACxB,IAAIH,YAAYA,QAAQ,CAAC,EAAE,KAAK,KAAKA,WAAW,MAAMA;EACxD,OAAO,IAAI,CAACG,MAAM;IAChBA,OAAO;EACT;EAEA,IAAIF,QAAQA,IAAI,CAAC,EAAE,KAAK,KAAKA,OAAO,MAAMA;EAC1C,IAAIU,UAAUA,MAAM,CAAC,EAAE,KAAK,KAAKA,SAAS,MAAMA;EAEhDX,WAAWA,SAASK,OAAO,CAAC,SAASD;EACrCO,SAASA,OAAON,OAAO,CAAC,KAAK;EAE7B,OAAO,EAAC,GAAEN,WAAWI,OAAOH,WAAWW,SAASV;AAClD;AAEO,MAAMR,gBAAgB,CAC3B,QACA,QACA,QACA,YACA,QACA,QACA,YACA,QACA,YACA,SACA,UACA,UACD;AAEM,SAASC,qBAAqBqB,GAAc;EACjD,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;IAC1C,IAAIH,QAAQ,QAAQ,OAAOA,QAAQ,UAAU;MAC3CI,OAAOC,IAAI,CAACL,KAAKM,OAAO,CAAEC;QACxB,IAAI,CAAC7B,cAAc8B,QAAQ,CAACD,MAAM;UAChCE,QAAQC,IAAI,CACV,oDAAC,GAAoDH;QAEzD;MACF;IACF;EACF;EAEA,OAAO9B,UAAUuB;AACnB","names":["formatUrl","urlObjectKeys","formatWithValidation","slashedProtocols","urlObj","auth","hostname","protocol","pathname","hash","query","host","encodeURIComponent","replace","indexOf","port","String","querystring","urlQueryToSearchParams","search","endsWith","slashes","test","url","process","env","NODE_ENV","Object","keys","forEach","key","includes","console","warn"],"sources":["../../../../../src/shared/lib/router/utils/format-url.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}