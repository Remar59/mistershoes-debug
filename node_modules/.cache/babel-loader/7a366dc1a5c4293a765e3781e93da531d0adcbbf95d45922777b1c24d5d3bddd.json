{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"interpolateAs\", {\n  enumerable: true,\n  get: function () {\n    return interpolateAs;\n  }\n});\nconst _routematcher = require(\"./route-matcher\");\nconst _routeregex = require(\"./route-regex\");\nfunction interpolateAs(route, asPathname, query) {\n  let interpolatedRoute = \"\";\n  const dynamicRegex = (0, _routeregex.getRouteRegex)(route);\n  const dynamicGroups = dynamicRegex.groups;\n  const dynamicMatches =\n  // Try to match the dynamic route against the asPath\n  (asPathname !== route ? (0, _routematcher.getRouteMatcher)(dynamicRegex)(asPathname) : \"\") ||\n  // Fall back to reading the values from the href\n  // TODO: should this take priority; also need to change in the router.\n  query;\n  interpolatedRoute = route;\n  const params = Object.keys(dynamicGroups);\n  if (!params.every(param => {\n    let value = dynamicMatches[param] || \"\";\n    const {\n      repeat,\n      optional\n    } = dynamicGroups[param];\n    // support single-level catch-all\n    // TODO: more robust handling for user-error (passing `/`)\n    let replaced = \"[\" + (repeat ? \"...\" : \"\") + param + \"]\";\n    if (optional) {\n      replaced = (!value ? \"/\" : \"\") + \"[\" + replaced + \"]\";\n    }\n    if (repeat && !Array.isArray(value)) value = [value];\n    return (optional || param in dynamicMatches) && (\n    // Interpolate group into data URL if present\n    interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(\n    // these values should be fully encoded instead of just\n    // path delimiter escaped since they are being inserted\n    // into the URL and we expect URL encoded segments\n    // when parsing dynamic route params\n    segment => encodeURIComponent(segment)).join(\"/\") : encodeURIComponent(value)) || \"/\");\n  })) {\n    interpolatedRoute = \"\" // did not satisfy all requirements\n    ;\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n  }\n\n  return {\n    params,\n    result: interpolatedRoute\n  };\n}","map":{"version":3,"mappings":";;;;;+BAKgBA;;;WAAAA;;;8BAHgB;4BACF;AAEvB,SAASA,cACdC,KAAa,EACbC,UAAkB,EAClBC,KAAqB;EAErB,IAAIC,oBAAoB;EAExB,MAAMC,eAAeC,6BAAa,EAACL;EACnC,MAAMM,gBAAgBF,aAAaG,MAAM;EACzC,MAAMC;EAEJ;EAACP,gBAAeD,QAAQS,iCAAe,EAACL,cAAcH,cAAc,EAAC;EACrE;EACA;EACAC;EAEFC,oBAAoBH;EACpB,MAAMU,SAASC,OAAOC,IAAI,CAACN;EAE3B,IACE,CAACI,OAAOG,KAAK,CAAEC;IACb,IAAIC,QAAQP,cAAc,CAACM,MAAM,IAAI;IACrC,MAAM;MAAEE,MAAM;MAAEC;IAAQ,CAAE,GAAGX,aAAa,CAACQ,MAAM;IAEjD;IACA;IACA,IAAII,WAAW,GAAC,IAAGF,SAAS,QAAQ,EAAC,IAAIF,QAAM;IAC/C,IAAIG,UAAU;MACZC,WAAW,CAAG,CAACH,QAAQ,MAAM,EAAC,IAAE,MAAGG,WAAS;IAC9C;IACA,IAAIF,UAAU,CAACG,MAAMC,OAAO,CAACL,QAAQA,QAAQ,CAACA,MAAM;IAEpD,OACE,CAACE,YAAYH,SAASN,cAAa;IACnC;IACCL,oBACCA,kBAAmBkB,OAAO,CACxBH,UACAF,SACID,KAACA,CACEO,GAAG;IACF;IACA;IACA;IACA;IACCC,WAAYC,mBAAmBD,UAEjCE,IAAI,CAAC,OACRD,mBAAmBT,WACpB,GAAE;EAEb,IACA;IACAZ,oBAAoB,GAAG;IAAA;IAEvB;IACA;EACF;;EACA,OAAO;IACLO;IACAgB,QAAQvB;EACV;AACF","names":["interpolateAs","route","asPathname","query","interpolatedRoute","dynamicRegex","getRouteRegex","dynamicGroups","groups","dynamicMatches","getRouteMatcher","params","Object","keys","every","param","value","repeat","optional","replaced","Array","isArray","replace","map","segment","encodeURIComponent","join","result"],"sources":["../../../../../src/shared/lib/router/utils/interpolate-as.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}