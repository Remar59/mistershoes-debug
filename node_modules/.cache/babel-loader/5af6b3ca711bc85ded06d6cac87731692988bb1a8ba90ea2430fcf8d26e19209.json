{"ast":null,"code":"\"use client\";\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _default;\n  }\n});\nconst _interop_require_default = require(\"@swc/helpers/_/_interop_require_default\");\nconst _jsxruntime = require(\"react/jsx-runtime\");\nconst _react = /*#__PURE__*/_interop_require_default._(require(\"react\"));\nconst _resolvehref = require(\"./resolve-href\");\nconst _islocalurl = require(\"../shared/lib/router/utils/is-local-url\");\nconst _formaturl = require(\"../shared/lib/router/utils/format-url\");\nconst _utils = require(\"../shared/lib/utils\");\nconst _addlocale = require(\"./add-locale\");\nconst _routercontextsharedruntime = require(\"../shared/lib/router-context.shared-runtime\");\nconst _approutercontextsharedruntime = require(\"../shared/lib/app-router-context.shared-runtime\");\nconst _useintersection = require(\"./use-intersection\");\nconst _getdomainlocale = require(\"./get-domain-locale\");\nconst _addbasepath = require(\"./add-base-path\");\nconst _routerreducertypes = require(\"./components/router-reducer/router-reducer-types\");\nconst prefetched = new Set();\nfunction prefetch(router, href, as, options, appOptions, isAppRouter) {\n  if (typeof window === \"undefined\") {\n    return;\n  }\n  // app-router supports external urls out of the box so it shouldn't short-circuit here as support for e.g. `replace` is added in the app-router.\n  if (!isAppRouter && !(0, _islocalurl.isLocalURL)(href)) {\n    return;\n  }\n  // We should only dedupe requests when experimental.optimisticClientCache is\n  // disabled.\n  if (!options.bypassPrefetchedCheck) {\n    const locale =\n    // Let the link's locale prop override the default router locale.\n    typeof options.locale !== \"undefined\" ? options.locale : \"locale\" in router ? router.locale : undefined;\n    const prefetchedKey = href + \"%\" + as + \"%\" + locale;\n    // If we've already fetched the key, then don't prefetch it again!\n    if (prefetched.has(prefetchedKey)) {\n      return;\n    }\n    // Mark this URL as prefetched.\n    prefetched.add(prefetchedKey);\n  }\n  const prefetchPromise = isAppRouter ? router.prefetch(href, appOptions) : router.prefetch(href, as, options);\n  // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  Promise.resolve(prefetchPromise).catch(err => {\n    if (process.env.NODE_ENV !== \"production\") {\n      // rethrow to show invalid URL errors\n      throw err;\n    }\n  });\n}\nfunction isModifiedEvent(event) {\n  const eventTarget = event.currentTarget;\n  const target = eventTarget.getAttribute(\"target\");\n  return target && target !== \"_self\" || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey ||\n  // triggers resource download\n  event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter) {\n  const {\n    nodeName\n  } = e.currentTarget;\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === \"A\";\n  if (isAnchorNodeName && (isModifiedEvent(e) ||\n  // app-router supports external urls out of the box so it shouldn't short-circuit here as support for e.g. `replace` is added in the app-router.\n  !isAppRouter && !(0, _islocalurl.isLocalURL)(href))) {\n    // ignore click for browserâ€™s default behavior\n    return;\n  }\n  e.preventDefault();\n  const navigate = () => {\n    // If the router is an NextRouter instance it will have `beforePopState`\n    const routerScroll = scroll != null ? scroll : true;\n    if (\"beforePopState\" in router) {\n      router[replace ? \"replace\" : \"push\"](href, as, {\n        shallow,\n        locale,\n        scroll: routerScroll\n      });\n    } else {\n      router[replace ? \"replace\" : \"push\"](as || href, {\n        scroll: routerScroll\n      });\n    }\n  };\n  if (isAppRouter) {\n    _react.default.startTransition(navigate);\n  } else {\n    navigate();\n  }\n}\nfunction formatStringOrUrl(urlObjOrString) {\n  if (typeof urlObjOrString === \"string\") {\n    return urlObjOrString;\n  }\n  return (0, _formaturl.formatUrl)(urlObjOrString);\n}\n/**\n * React Component that enables client-side transitions between routes.\n */\nconst Link = /*#__PURE__*/_react.default.forwardRef(function LinkComponent(props, forwardedRef) {\n  let children;\n  const {\n    href: hrefProp,\n    as: asProp,\n    children: childrenProp,\n    prefetch: prefetchProp = null,\n    passHref,\n    replace,\n    shallow,\n    scroll,\n    locale,\n    onClick,\n    onMouseEnter: onMouseEnterProp,\n    onTouchStart: onTouchStartProp,\n    legacyBehavior = false,\n    ...restProps\n  } = props;\n  children = childrenProp;\n  if (legacyBehavior && (typeof children === \"string\" || typeof children === \"number\")) {\n    children = /*#__PURE__*/(0, _jsxruntime.jsx)(\"a\", {\n      children: children\n    });\n  }\n  const pagesRouter = _react.default.useContext(_routercontextsharedruntime.RouterContext);\n  const appRouter = _react.default.useContext(_approutercontextsharedruntime.AppRouterContext);\n  const router = pagesRouter != null ? pagesRouter : appRouter;\n  // We're in the app directory if there is no pages router.\n  const isAppRouter = !pagesRouter;\n  const prefetchEnabled = prefetchProp !== false;\n  /**\n   * The possible states for prefetch are:\n   * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n   * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n   * - false: we will not prefetch if in the viewport at all\n   */\n  const appPrefetchKind = prefetchProp === null ? _routerreducertypes.PrefetchKind.AUTO : _routerreducertypes.PrefetchKind.FULL;\n  if (process.env.NODE_ENV !== \"production\") {\n    function createPropError(args) {\n      return new Error(\"Failed prop type: The prop `\" + args.key + \"` expects a \" + args.expected + \" in `<Link>`, but got `\" + args.actual + \"` instead.\" + (typeof window !== \"undefined\" ? \"\\nOpen your browser's console to view the Component stack trace.\" : \"\"));\n    }\n    // TypeScript trick for type-guarding:\n    const requiredPropsGuard = {\n      href: true\n    };\n    const requiredProps = Object.keys(requiredPropsGuard);\n    requiredProps.forEach(key => {\n      if (key === \"href\") {\n        if (props[key] == null || typeof props[key] !== \"string\" && typeof props[key] !== \"object\") {\n          throw createPropError({\n            key,\n            expected: \"`string` or `object`\",\n            actual: props[key] === null ? \"null\" : typeof props[key]\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _ = key;\n      }\n    });\n    // TypeScript trick for type-guarding:\n    const optionalPropsGuard = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      locale: true,\n      onClick: true,\n      onMouseEnter: true,\n      onTouchStart: true,\n      legacyBehavior: true\n    };\n    const optionalProps = Object.keys(optionalPropsGuard);\n    optionalProps.forEach(key => {\n      const valType = typeof props[key];\n      if (key === \"as\") {\n        if (props[key] && valType !== \"string\" && valType !== \"object\") {\n          throw createPropError({\n            key,\n            expected: \"`string` or `object`\",\n            actual: valType\n          });\n        }\n      } else if (key === \"locale\") {\n        if (props[key] && valType !== \"string\") {\n          throw createPropError({\n            key,\n            expected: \"`string`\",\n            actual: valType\n          });\n        }\n      } else if (key === \"onClick\" || key === \"onMouseEnter\" || key === \"onTouchStart\") {\n        if (props[key] && valType !== \"function\") {\n          throw createPropError({\n            key,\n            expected: \"`function`\",\n            actual: valType\n          });\n        }\n      } else if (key === \"replace\" || key === \"scroll\" || key === \"shallow\" || key === \"passHref\" || key === \"prefetch\" || key === \"legacyBehavior\") {\n        if (props[key] != null && valType !== \"boolean\") {\n          throw createPropError({\n            key,\n            expected: \"`boolean`\",\n            actual: valType\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _ = key;\n      }\n    });\n    // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const hasWarned = _react.default.useRef(false);\n    if (props.prefetch && !hasWarned.current && !isAppRouter) {\n      hasWarned.current = true;\n      console.warn(\"Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated\");\n    }\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    if (isAppRouter && !asProp) {\n      let href;\n      if (typeof hrefProp === \"string\") {\n        href = hrefProp;\n      } else if (typeof hrefProp === \"object\" && typeof hrefProp.pathname === \"string\") {\n        href = hrefProp.pathname;\n      }\n      if (href) {\n        const hasDynamicSegment = href.split(\"/\").some(segment => segment.startsWith(\"[\") && segment.endsWith(\"]\"));\n        if (hasDynamicSegment) {\n          throw new Error(\"Dynamic href `\" + href + \"` found in <Link> while using the `/app` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href\");\n        }\n      }\n    }\n  }\n  const {\n    href,\n    as\n  } = _react.default.useMemo(() => {\n    if (!pagesRouter) {\n      const resolvedHref = formatStringOrUrl(hrefProp);\n      return {\n        href: resolvedHref,\n        as: asProp ? formatStringOrUrl(asProp) : resolvedHref\n      };\n    }\n    const [resolvedHref, resolvedAs] = (0, _resolvehref.resolveHref)(pagesRouter, hrefProp, true);\n    return {\n      href: resolvedHref,\n      as: asProp ? (0, _resolvehref.resolveHref)(pagesRouter, asProp) : resolvedAs || resolvedHref\n    };\n  }, [pagesRouter, hrefProp, asProp]);\n  const previousHref = _react.default.useRef(href);\n  const previousAs = _react.default.useRef(as);\n  // This will return the first child, if multiple are provided it will throw an error\n  let child;\n  if (legacyBehavior) {\n    if (process.env.NODE_ENV === \"development\") {\n      if (onClick) {\n        console.warn('\"onClick\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link');\n      }\n      if (onMouseEnterProp) {\n        console.warn('\"onMouseEnter\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link');\n      }\n      try {\n        child = _react.default.Children.only(children);\n      } catch (err) {\n        if (!children) {\n          throw new Error(\"No children were passed to <Link> with `href` of `\" + hrefProp + \"` but one child is required https://nextjs.org/docs/messages/link-no-children\");\n        }\n        throw new Error(\"Multiple children were passed to <Link> with `href` of `\" + hrefProp + \"` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children\" + (typeof window !== \"undefined\" ? \" \\nOpen your browser's console to view the Component stack trace.\" : \"\"));\n      }\n    } else {\n      child = _react.default.Children.only(children);\n    }\n  } else {\n    if (process.env.NODE_ENV === \"development\") {\n      if ((children == null ? void 0 : children.type) === \"a\") {\n        throw new Error(\"Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor\");\n      }\n    }\n  }\n  const childRef = legacyBehavior ? child && typeof child === \"object\" && child.ref : forwardedRef;\n  const [setIntersectionRef, isVisible, resetVisible] = (0, _useintersection.useIntersection)({\n    rootMargin: \"200px\"\n  });\n  const setRef = _react.default.useCallback(el => {\n    // Before the link getting observed, check if visible state need to be reset\n    if (previousAs.current !== as || previousHref.current !== href) {\n      resetVisible();\n      previousAs.current = as;\n      previousHref.current = href;\n    }\n    setIntersectionRef(el);\n    if (childRef) {\n      if (typeof childRef === \"function\") childRef(el);else if (typeof childRef === \"object\") {\n        childRef.current = el;\n      }\n    }\n  }, [as, childRef, href, resetVisible, setIntersectionRef]);\n  // Prefetch the URL if we haven't already and it's visible.\n  _react.default.useEffect(() => {\n    // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n    if (!router) {\n      return;\n    }\n    // If we don't need to prefetch the URL, don't do prefetch.\n    if (!isVisible || !prefetchEnabled) {\n      return;\n    }\n    // Prefetch the URL.\n    prefetch(router, href, as, {\n      locale\n    }, {\n      kind: appPrefetchKind\n    }, isAppRouter);\n  }, [as, href, isVisible, locale, prefetchEnabled, pagesRouter == null ? void 0 : pagesRouter.locale, router, isAppRouter, appPrefetchKind]);\n  const childProps = {\n    ref: setRef,\n    onClick(e) {\n      if (process.env.NODE_ENV !== \"production\") {\n        if (!e) {\n          throw new Error('Component rendered inside next/link has to pass click event to \"onClick\" prop.');\n        }\n      }\n      if (!legacyBehavior && typeof onClick === \"function\") {\n        onClick(e);\n      }\n      if (legacyBehavior && child.props && typeof child.props.onClick === \"function\") {\n        child.props.onClick(e);\n      }\n      if (!router) {\n        return;\n      }\n      if (e.defaultPrevented) {\n        return;\n      }\n      linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter);\n    },\n    onMouseEnter(e) {\n      if (!legacyBehavior && typeof onMouseEnterProp === \"function\") {\n        onMouseEnterProp(e);\n      }\n      if (legacyBehavior && child.props && typeof child.props.onMouseEnter === \"function\") {\n        child.props.onMouseEnter(e);\n      }\n      if (!router) {\n        return;\n      }\n      if ((!prefetchEnabled || process.env.NODE_ENV === \"development\") && isAppRouter) {\n        return;\n      }\n      prefetch(router, href, as, {\n        locale,\n        priority: true,\n        // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n        bypassPrefetchedCheck: true\n      }, {\n        kind: appPrefetchKind\n      }, isAppRouter);\n    },\n    onTouchStart(e) {\n      if (!legacyBehavior && typeof onTouchStartProp === \"function\") {\n        onTouchStartProp(e);\n      }\n      if (legacyBehavior && child.props && typeof child.props.onTouchStart === \"function\") {\n        child.props.onTouchStart(e);\n      }\n      if (!router) {\n        return;\n      }\n      if (!prefetchEnabled && isAppRouter) {\n        return;\n      }\n      prefetch(router, href, as, {\n        locale,\n        priority: true,\n        // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n        bypassPrefetchedCheck: true\n      }, {\n        kind: appPrefetchKind\n      }, isAppRouter);\n    }\n  };\n  // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user.\n  // If the url is absolute, we can bypass the logic to prepend the domain and locale.\n  if ((0, _utils.isAbsoluteUrl)(as)) {\n    childProps.href = as;\n  } else if (!legacyBehavior || passHref || child.type === \"a\" && !(\"href\" in child.props)) {\n    const curLocale = typeof locale !== \"undefined\" ? locale : pagesRouter == null ? void 0 : pagesRouter.locale;\n    // we only render domain locales if we are currently on a domain locale\n    // so that locale links are still visitable in development/preview envs\n    const localeDomain = (pagesRouter == null ? void 0 : pagesRouter.isLocaleDomain) && (0, _getdomainlocale.getDomainLocale)(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.locales, pagesRouter == null ? void 0 : pagesRouter.domainLocales);\n    childProps.href = localeDomain || (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.defaultLocale));\n  }\n  return legacyBehavior ? /*#__PURE__*/_react.default.cloneElement(child, childProps) : /*#__PURE__*/(0, _jsxruntime.jsx)(\"a\", {\n    ...restProps,\n    ...childProps,\n    children: children\n  });\n});\nconst _default = Link;\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}","map":{"version":3,"mappings":"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","names":["_interop_require_default","prefetched","Set","prefetch","router","href","window","locale","options","prefetchedKey","as","Promise","process","env","catch","isModifiedEvent","event","currentTarget","target","eventTarget","metaKey","nativeEvent","which","linkClicked","nodeName","isAnchorNodeName","e","isAppRouter","isLocalURL","navigate","routerScroll","replace","shallow","scroll","React","_react","formatStringOrUrl","urlObjOrString","children","childrenProp","legacyBehavior","a","appRouter","useContext","AppRouterContext","pagesRouter","prefetchEnabled","prefetchProp","createPropError","args","requiredProps","forEach","Object","key","props","expected","actual","passHref","onClick","onMouseEnter","onTouchStart","optionalProps","valType","hasWarned","current","console","warn","asProp","hrefProp","pathname","hasDynamicSegment","resolvedHref","resolveHref","previousAs","useRef","NODE_ENV","child","err","Error","childRef","setIntersectionRef","isVisible","resetVisible","useIntersection","rootMargin","setRef","previousHref","el","appPrefetchKind","ref","onMouseEnterProp","priority","bypassPrefetchedCheck","onTouchStartProp","childProps","curLocale","localeDomain","addBasePath","addLocale","_getdomainlocale","defaultLocale","restProps"],"sources":["../../src/client/link.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}